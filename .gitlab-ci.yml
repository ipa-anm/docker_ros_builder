variables:
  DOCKER_BUILDKIT: 1
  DOCKER_TLS_CERTDIR: ""
  SUFFIX: ""
  PREFIX: "${CI_REGISTRY_IMAGE}/${CI_PIPELINE_ID}:"
  FOLDER: ${CI_JOB_NAME}
  NAME: ${CI_JOB_NAME}
  TARGET_LATEST: ${CI_REGISTRY_IMAGE}/${CI_JOB_NAME}:latest
  TARGET_BRANCH: ${CI_REGISTRY_IMAGE}/${CI_JOB_NAME}:${CI_COMMIT_REF_NAME//\//-}

services:
  - docker:dind

default:
  tags:
    - docker-build

stages:
  - builder
  - publish
  - cleanup

.common:
  docker_login:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.build:
  stage: ${CI_JOB_NAME}
  script:
    - TARGET=${CI_REGISTRY_IMAGE}/${NAME}:${CI_COMMIT_REF_NAME//\//-}; docker build --cache-from $TARGET --cache-from $TARGET_LATEST --cache-from $TARGET_BRANCH --build-arg SUFFIX --build-arg PREFIX --build-arg ROS_DISTRO -t ${PREFIX}${NAME}${SUFFIX} ${FOLDER}
  after_script:
    - docker push ${PREFIX}${NAME}${SUFFIX}

builder:
  extends: .build
  stage: builder
  before_script:
    - !reference [.common, docker_login]

.publish:
  stage: publish
  before_script:
    - !reference [.common, docker_login]
    - docker pull ${PREFIX}${NAME}${SUFFIX}
  script:
    - echo "${CI_REGISTRY_IMAGE}/${NAME}:${CI_COMMIT_REF_NAME//\//-}"
    - TARGET=${CI_REGISTRY_IMAGE}/${RENAME}:${CI_COMMIT_REF_NAME//\//-}; if [ "$CI_COMMIT_REF_NAME" = "main" ]; then TARGET=$TARGET_LATEST; fi; docker tag ${PREFIX}${NAME}${SUFFIX} ${TARGET} && docker push ${TARGET}
  variables:
    TARGET_LATEST: ${CI_REGISTRY_IMAGE}/${NAME}:latest

publish:builder:
  extends: .publish
  variables:
    NAME: builder
    RENAME: builder

cleanup_job:
  image: alpine:latest
  stage: cleanup
  variables:
    REG_SHA256: ade837fc5224acd8c34732bf54a94f579b47851cc6a7fd5899a98386b782e228
    REG_VERSION: 0.16.1
  before_script:
    - apk add --no-cache curl
    - curl --fail --show-error --location "https://github.com/genuinetools/reg/releases/download/v$REG_VERSION/reg-linux-amd64" --output /usr/local/bin/reg
    - echo "$REG_SHA256  /usr/local/bin/reg" | sha256sum -c -
    - chmod a+x /usr/local/bin/reg
  script:
    - for i in $(/usr/local/bin/reg tags --auth-url $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY_IMAGE}/${CI_PIPELINE_ID}); do /usr/local/bin/reg rm -d  --auth-url $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY_IMAGE}/${CI_PIPELINE_ID}:$i ; done
  when: always
